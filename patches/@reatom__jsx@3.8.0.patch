diff --git a/build/index.d.ts b/build/index.d.ts
index 680b82ac6a603477e6996d42885dd083e08bfbc1..a071e87169356124853365e555dccc22f2cd14ab 100644
--- a/build/index.d.ts
+++ b/build/index.d.ts
@@ -6,8 +6,8 @@ type DomApis = Pick<typeof window, 'document' | 'Node' | 'Text' | 'Element' | 'M
 export declare const reatomJsx: (ctx: Ctx, DOM?: DomApis) => {
     h: (tag: any, props: Rec, ...children: any[]) => any;
     hf: () => void;
-    mount: (target: Element, child: Element) => void;
+    mount: (target: Element, ...children: Element[]) => void;
 };
 export declare const ctx: Ctx;
-export declare const h: (tag: any, props: Rec, ...children: any[]) => any, hf: () => void, mount: (target: Element, child: Element) => void;
+export declare const h: (tag: any, props: Rec, ...children: any[]) => any, hf: () => void, mount: (target: Element, ...children: Element[]) => void;
 //# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/build/index.js b/build/index.js
index 9cc62d119a00f5109ffdec0a743d6199901e7195..0a7fffeca6e554420844c535d5a67aab760209a4 100644
--- a/build/index.js
+++ b/build/index.js
@@ -1,2 +1,2 @@
-var core=require("@reatom/core"),utils=require("@reatom/utils");const reatomJsx=(ctx,DOM=globalThis.window)=>{let stylesheet,unsubscribesMap=new WeakMap,styles={},name="",set=(element,key,val)=>{if(key.startsWith("on:"))key=key.slice(3),val=core.action(val,`${name}.${element.nodeName.toLowerCase()}.${key}`),element.addEventListener(key,event=>val(ctx,event));else if(key.startsWith("css:"))key="--"+key.slice(4),null==val?element.style.removeProperty(key):element.style.setProperty(key,String(val));else if("css"===key){stylesheet??=DOM.document.getElementById("reatom-jsx-styles"),stylesheet||(stylesheet=DOM.document.createElement("style"),stylesheet.id="reatom-jsx-styles",DOM.document.head.appendChild(stylesheet));let className=styles[val];className||(className=styles[val]="reatom-"+utils.random(),stylesheet.innerText+="."+className+"{"+val+"}\n"),element.classList.add(className)}else if("style"===key&&"object"==typeof val)for(const key in val)null==val[key]?element.style.removeProperty(key):element.style.setProperty(key,val[key]);else key.startsWith("prop:")?element[key.slice(5)]=val:(key.startsWith("attr:")&&(key=key.slice(5)),null==val?element.removeAttribute(key):element.setAttribute(key,String(val)))},unlink=(parent,un)=>{Promise.resolve().then(()=>{if(parent.isConnected)for(;parent.parentElement&&!unsubscribesMap.get(parent)?.push(un);)parent=parent.parentElement;else un()})},hf=()=>{};return{h:function(tag,props){var children=[].slice.call(arguments,2);if(tag===hf)return children;if("function"==typeof tag){(props??={}).children=children;let _name=tag.name;try{return name=tag.name,tag(props)}finally{name=_name}}let element=tag.startsWith("svg:")?DOM.document.createElementNS("http://www.w3.org/2000/svg",tag.slice(4)):DOM.document.createElement(tag);for(let k in props){let prop=props[k];if(core.isAtom(prop)&&!prop.__reatom.isAction){if(k.startsWith("model:")){let name=k=k.slice(6);set(element,"on:input",(ctx,event)=>{prop(ctx,"valueAsNumber"===name?+event.target.value:event.target[name])}),"valueAsNumber"===k&&(k="value"),k="prop:"+k}let un;un=ctx.subscribe(prop,v=>!un||element.isConnected?"$spread"===k?Object.entries(v).forEach(([k,v])=>set(element,k,v)):set(element,k,v):un()),unlink(element,un)}else set(element,k,prop)}let walk=child=>{if(Array.isArray(child))child.forEach(walk);else if(core.isAtom(child)){let un,innerChild=DOM.document.createTextNode("");un=ctx.subscribe(child,v=>{if(un&&!innerChild.isConnected)un();else if(core.throwReatomError(Array.isArray(v),"array children are not supported"),v instanceof DOM.HTMLElement){let list=unsubscribesMap.get(v);list||unsubscribesMap.set(v,list=[]),un&&element.replaceChild(v,innerChild),innerChild=v}else innerChild.textContent=v}),unlink(element,un),element.appendChild(innerChild)}else element.appendChild(child?.nodeType?child:DOM.document.createTextNode(String(child)))};return children.forEach(walk),element},hf:hf,mount:(target,child)=>{target.appendChild(child),new DOM.MutationObserver(mutationsList=>{for(let mutation of mutationsList)for(let removedNode of mutation.removedNodes){let list=unsubscribesMap.get(removedNode);list&&(list.forEach(fn=>fn()),unsubscribesMap.delete(removedNode))}}).observe(target,{childList:!0,subtree:!0})}}},ctx=core.createCtx(),{h:h,hf:hf,mount:mount}=reatomJsx(ctx);exports.ctx=ctx,exports.h=h,exports.hf=hf,exports.mount=mount,exports.reatomJsx=reatomJsx;
+var core=require("@reatom/core"),utils=require("@reatom/utils");const reatomJsx=(ctx,DOM=globalThis.window)=>{let stylesheet,unsubscribesMap=new WeakMap,styles={},name="",set=(element,key,val)=>{if(key.startsWith("on:"))key=key.slice(3),val=core.action(val,`${name}.${element.nodeName.toLowerCase()}.${key}`),element.addEventListener(key,event=>val(ctx,event));else if(key.startsWith("css:"))key="--"+key.slice(4),null==val?element.style.removeProperty(key):element.style.setProperty(key,String(val));else if("css"===key){stylesheet??=DOM.document.getElementById("reatom-jsx-styles"),stylesheet||(stylesheet=DOM.document.createElement("style"),stylesheet.id="reatom-jsx-styles",DOM.document.head.appendChild(stylesheet));let className=styles[val];className||(className=styles[val]="reatom-"+utils.random(),stylesheet.innerText+="."+className+"{"+val+"}\n"),element.classList.add(className)}else if("style"===key&&"object"==typeof val)for(const key in val)null==val[key]?element.style.removeProperty(key):element.style.setProperty(key,val[key]);else key.startsWith("prop:")?element[key.slice(5)]=val:(key.startsWith("attr:")&&(key=key.slice(5)),null==val?element.removeAttribute(key):element.setAttribute(key,String(val)))},unlink=(parent,un)=>{Promise.resolve().then(()=>{if(parent.isConnected)for(;parent.parentElement&&!unsubscribesMap.get(parent)?.push(un);)parent=parent.parentElement;else un()})},hf=()=>{};return{h:function(tag,props){var children=[].slice.call(arguments,2);if(tag===hf)return children;if("function"==typeof tag){(props??={}).children=children;let _name=tag.name;try{return name=tag.name,tag(props)}finally{name=_name}}let element=tag.startsWith("svg:")?DOM.document.createElementNS("http://www.w3.org/2000/svg",tag.slice(4)):DOM.document.createElement(tag);for(let k in props){let prop=props[k];if(core.isAtom(prop)&&!prop.__reatom.isAction){if(k.startsWith("model:")){let name=k=k.slice(6);set(element,"on:input",(ctx,event)=>{prop(ctx,"valueAsNumber"===name?+event.target.value:event.target[name])}),"valueAsNumber"===k&&(k="value"),k="prop:"+k}let un;un=ctx.subscribe(prop,v=>!un||element.isConnected?"$spread"===k?Object.entries(v).forEach(([k,v])=>set(element,k,v)):set(element,k,v):un()),unlink(element,un)}else set(element,k,prop)}let walk=child=>{if(Array.isArray(child))child.forEach(walk);else if(core.isAtom(child)){let un,innerChild=DOM.document.createTextNode("");un=ctx.subscribe(child,v=>{if(un&&!innerChild.isConnected)un();else if(core.throwReatomError(Array.isArray(v),"array children are not supported"),v instanceof DOM.HTMLElement){let list=unsubscribesMap.get(v);list||unsubscribesMap.set(v,list=[]),un&&element.replaceChild(v,innerChild),innerChild=v}else innerChild.textContent=v}),unlink(element,un),element.appendChild(innerChild)}else element.appendChild(child?.nodeType?child:DOM.document.createTextNode(String(child)))};return children.forEach(walk),element},hf:hf,mount:(target,child)=>{if(Array.isArray(child)){target.append(...[child].flat(Infinity))}else{target.appendChild(child)};new DOM.MutationObserver(mutationsList=>{for(let mutation of mutationsList)for(let removedNode of mutation.removedNodes){let list=unsubscribesMap.get(removedNode);list&&(list.forEach(fn=>fn()),unsubscribesMap.delete(removedNode))}}).observe(target,{childList:!0,subtree:!0})}}},ctx=core.createCtx(),{h:h,hf:hf,mount:mount}=reatomJsx(ctx);exports.ctx=ctx,exports.h=h,exports.hf=hf,exports.mount=mount,exports.reatomJsx=reatomJsx;
 //# sourceMappingURL=index.js.map
diff --git a/build/index.module.js b/build/index.module.js
index e18b199e1cdec99469abebaf1bdbdca34773b53c..0284e5704fb723f5830997762decf547e1bc5565 100644
--- a/build/index.module.js
+++ b/build/index.module.js
@@ -1,2 +1,2 @@
-import{createCtx,isAtom,action,throwReatomError}from"@reatom/core";import{random}from"@reatom/utils";const reatomJsx=(ctx,DOM=globalThis.window)=>{let stylesheet,unsubscribesMap=new WeakMap,styles={},name="",set=(element,key,val)=>{if(key.startsWith("on:"))key=key.slice(3),val=action(val,`${name}.${element.nodeName.toLowerCase()}.${key}`),element.addEventListener(key,event=>val(ctx,event));else if(key.startsWith("css:"))key="--"+key.slice(4),null==val?element.style.removeProperty(key):element.style.setProperty(key,String(val));else if("css"===key){stylesheet??=DOM.document.getElementById("reatom-jsx-styles"),stylesheet||(stylesheet=DOM.document.createElement("style"),stylesheet.id="reatom-jsx-styles",DOM.document.head.appendChild(stylesheet));let className=styles[val];className||(className=styles[val]="reatom-"+random(),stylesheet.innerText+="."+className+"{"+val+"}\n"),element.classList.add(className)}else if("style"===key&&"object"==typeof val)for(const key in val)null==val[key]?element.style.removeProperty(key):element.style.setProperty(key,val[key]);else key.startsWith("prop:")?element[key.slice(5)]=val:(key.startsWith("attr:")&&(key=key.slice(5)),null==val?element.removeAttribute(key):element.setAttribute(key,String(val)))},unlink=(parent,un)=>{Promise.resolve().then(()=>{if(parent.isConnected)for(;parent.parentElement&&!unsubscribesMap.get(parent)?.push(un);)parent=parent.parentElement;else un()})},hf=()=>{};return{h:function(tag,props){var children=[].slice.call(arguments,2);if(tag===hf)return children;if("function"==typeof tag){(props??={}).children=children;let _name=tag.name;try{return name=tag.name,tag(props)}finally{name=_name}}let element=tag.startsWith("svg:")?DOM.document.createElementNS("http://www.w3.org/2000/svg",tag.slice(4)):DOM.document.createElement(tag);for(let k in props){let prop=props[k];if(isAtom(prop)&&!prop.__reatom.isAction){if(k.startsWith("model:")){let name=k=k.slice(6);set(element,"on:input",(ctx,event)=>{prop(ctx,"valueAsNumber"===name?+event.target.value:event.target[name])}),"valueAsNumber"===k&&(k="value"),k="prop:"+k}let un;un=ctx.subscribe(prop,v=>!un||element.isConnected?"$spread"===k?Object.entries(v).forEach(([k,v])=>set(element,k,v)):set(element,k,v):un()),unlink(element,un)}else set(element,k,prop)}let walk=child=>{if(Array.isArray(child))child.forEach(walk);else if(isAtom(child)){let un,innerChild=DOM.document.createTextNode("");un=ctx.subscribe(child,v=>{if(un&&!innerChild.isConnected)un();else if(throwReatomError(Array.isArray(v),"array children are not supported"),v instanceof DOM.HTMLElement){let list=unsubscribesMap.get(v);list||unsubscribesMap.set(v,list=[]),un&&element.replaceChild(v,innerChild),innerChild=v}else innerChild.textContent=v}),unlink(element,un),element.appendChild(innerChild)}else element.appendChild(child?.nodeType?child:DOM.document.createTextNode(String(child)))};return children.forEach(walk),element},hf:hf,mount:(target,child)=>{target.appendChild(child),new DOM.MutationObserver(mutationsList=>{for(let mutation of mutationsList)for(let removedNode of mutation.removedNodes){let list=unsubscribesMap.get(removedNode);list&&(list.forEach(fn=>fn()),unsubscribesMap.delete(removedNode))}}).observe(target,{childList:!0,subtree:!0})}}},ctx=createCtx(),{h:h,hf:hf,mount:mount}=reatomJsx(ctx);export{ctx,h,hf,mount,reatomJsx};
+import{createCtx,isAtom,action,throwReatomError}from"@reatom/core";import{random}from"@reatom/utils";const reatomJsx=(ctx,DOM=globalThis.window)=>{let stylesheet,unsubscribesMap=new WeakMap,styles={},name="",set=(element,key,val)=>{if(key.startsWith("on:"))key=key.slice(3),val=action(val,`${name}.${element.nodeName.toLowerCase()}.${key}`),element.addEventListener(key,event=>val(ctx,event));else if(key.startsWith("css:"))key="--"+key.slice(4),null==val?element.style.removeProperty(key):element.style.setProperty(key,String(val));else if("css"===key){stylesheet??=DOM.document.getElementById("reatom-jsx-styles"),stylesheet||(stylesheet=DOM.document.createElement("style"),stylesheet.id="reatom-jsx-styles",DOM.document.head.appendChild(stylesheet));let className=styles[val];className||(className=styles[val]="reatom-"+random(),stylesheet.innerText+="."+className+"{"+val+"}\n"),element.classList.add(className)}else if("style"===key&&"object"==typeof val)for(const key in val)null==val[key]?element.style.removeProperty(key):element.style.setProperty(key,val[key]);else key.startsWith("prop:")?element[key.slice(5)]=val:(key.startsWith("attr:")&&(key=key.slice(5)),null==val?element.removeAttribute(key):element.setAttribute(key,String(val)))},unlink=(parent,un)=>{Promise.resolve().then(()=>{if(parent.isConnected)for(;parent.parentElement&&!unsubscribesMap.get(parent)?.push(un);)parent=parent.parentElement;else un()})},hf=()=>{};return{h:function(tag,props){var children=[].slice.call(arguments,2);if(tag===hf)return children;if("function"==typeof tag){(props??={}).children=children;let _name=tag.name;try{return name=tag.name,tag(props)}finally{name=_name}}let element=tag.startsWith("svg:")?DOM.document.createElementNS("http://www.w3.org/2000/svg",tag.slice(4)):DOM.document.createElement(tag);for(let k in props){let prop=props[k];if(isAtom(prop)&&!prop.__reatom.isAction){if(k.startsWith("model:")){let name=k=k.slice(6);set(element,"on:input",(ctx,event)=>{prop(ctx,"valueAsNumber"===name?+event.target.value:event.target[name])}),"valueAsNumber"===k&&(k="value"),k="prop:"+k}let un;un=ctx.subscribe(prop,v=>!un||element.isConnected?"$spread"===k?Object.entries(v).forEach(([k,v])=>set(element,k,v)):set(element,k,v):un()),unlink(element,un)}else set(element,k,prop)}let walk=child=>{if(Array.isArray(child))child.forEach(walk);else if(isAtom(child)){let un,innerChild=DOM.document.createTextNode("");un=ctx.subscribe(child,v=>{if(un&&!innerChild.isConnected)un();else if(throwReatomError(Array.isArray(v),"array children are not supported"),v instanceof DOM.HTMLElement){let list=unsubscribesMap.get(v);list||unsubscribesMap.set(v,list=[]),un&&element.replaceChild(v,innerChild),innerChild=v}else innerChild.textContent=v}),unlink(element,un),element.appendChild(innerChild)}else element.appendChild(child?.nodeType?child:DOM.document.createTextNode(String(child)))};return children.forEach(walk),element},hf:hf,mount:(target,child)=>{if(Array.isArray(child)){target.append(...[child].flat(Infinity))}else{target.appendChild(child)};new DOM.MutationObserver(mutationsList=>{for(let mutation of mutationsList)for(let removedNode of mutation.removedNodes){let list=unsubscribesMap.get(removedNode);list&&(list.forEach(fn=>fn()),unsubscribesMap.delete(removedNode))}}).observe(target,{childList:!0,subtree:!0})}}},ctx=createCtx(),{h:h,hf:hf,mount:mount}=reatomJsx(ctx);export{ctx,h,hf,mount,reatomJsx};
 //# sourceMappingURL=index.module.js.map
